<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.mapper.BoardMapper">

	<sql id="search">
		<if test="type=='writer'">
		 where writer like concat ('%',#{keyword},'%')
		</if>
		<if test="type=='title'">
		 where title like concat ('%',#{keyword},'%')
		</if>
		<if test="type=='content'">
		 where content like concat ('%',#{keyword},'%')
		</if>
	</sql>


	<select id="getList" parameterType="kr.spring.entity.Criteria" resultType="kr.spring.entity.Board">
		SELECT * FROM TBLBOARD
		<!-- 동적 sql, 파라미터값이 위의 search sql로 가서 타입을 선택해주고 서치가 있을 경우 아래의 include에서 받아서 진행한다. -->
		<include refid="search" />
		ORDER BY BOARDGROUP DESC, BOARDSEQUENCE ASC
		LIMIT #{pageStart}, #{perPageNum}
		
		
	</select>
	
	<insert id="insert" parameterType="kr.spring.entity.Board">
		INSERT INTO TBLBOARD(IDX, MEMID, TITLE, CONTENT, WRITER
		, BOARDGROUP, BOARDSEQUENCE, BOARDLEVEL, BOARDAVAILABLE)
		SELECT IFNULL(MAX(IDX) +1, 1), #{memID}, #{title}, #{content}
		,#{writer}, IFNULL(MAX(BOARDGROUP) +1, 1), 0, 0, 1
		FROM TBLBOARD
	</insert>

	<insert id="insertSelectKey" parameterType="kr.spring.entity.Board">
		<selectKey keyProperty="idx,boardGroup" resultType="kr.spring.entity.Board" order="BEFORE">
			<!-- idx와 boardGroup을 keyproperty로 묶어서 resulttype의 board로 묶여서 parametertype의 board로 보내진다 -->
			<!-- 위의 insert insert문은 sql문으로, 여기에 insertselectkey는 스프링의 동적 쿼리로 진행한것임. -->
			SELECT IFNULL(MAX(IDX) + 1 , 1) as idx,
				   IFNULL(MAX(BOARDGROUP) +1 , 1) as boardGroup
			FROM TBLBOARD
		</selectKey>
		INSERT INTO TBLBOARD(IDX, MEMID, TITLE, CONTENT, WRITER
		, BOARDGROUP, BOARDSEQUENCE, BOARDLEVEL, BOARDAVAILABLE)
		VALUES(#{idx},#{memID},#{title},#{content},#{writer},#{boardGroup},0,0,1)
	</insert>

	<select id="login" parameterType="kr.spring.entity.Member" resultType="kr.spring.entity.Member">
		SELECT * FROM TBLMEMBER WHERE MEMID = #{memID} and MEMPWD=#{memPwd}
	</select>
	
	<select id="read" parameterType="int" resultType="kr.spring.entity.Board">
		SELECT * FROM TBLBOARD WHERE IDX=#{idx}
	</select>
	
	<update id="update" parameterType="kr.spring.entity.Board">
		UPDATE TBLBOARD
		SET TITLE = #{title}, CONTENT = #{content}
		WHERE IDX = #{idx}
	</update>
	
	<delete id="delete" parameterType="int">
		UPDATE TBLBOARD
		SET BOARDAVAILABLE = 0
		WHERE IDX = #{idx}
		
	</delete>

	<update id="replySeqUpdate" parameterType="kr.spring.entity.Board">
		UPDATE TBLBOARD SET BOARDSEQUENCE = BOARDSEQUENCE + 1
		WHERE BOARDGROUP = #{boardGroup}
		AND BOARDSEQUENCE > #{boardSequence}
	</update>
	
	<insert id="replyInsert" parameterType="kr.spring.entity.Board">
		<selectKey keyProperty="idx" resultType="kr.spring.entity.Board" order="BEFORE">
			SELECT IFNULL(MAX(IDX) + 1 , 1) as idx
			FROM TBLBOARD
		</selectKey>
		INSERT INTO TBLBOARD(IDX, MEMID, TITLE, CONTENT, WRITER
		, BOARDGROUP, BOARDSEQUENCE, BOARDLEVEL, BOARDAVAILABLE)
		VALUES(#{idx},#{memID},#{title},#{content},#{writer}
		,#{boardGroup},#{boardSequence},#{boardLevel},1)
	</insert>
	
	<select id="totalCount" resultType="int" parameterType="kr.spring.entity.Criteria">
		SELECT COUNT(*) FROM TBLBOARD
		<include refid="search" />		
	</select>
	
</mapper>