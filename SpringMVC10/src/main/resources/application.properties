#Spring Boot 환경설정하는 파일 (DB, Tomcat 등)


#Tomcat Server Port 변경
server.port=8081

#Context Path 수정 (localhost:8081/controller/ <--이부분이었던 부분)
#Spring에서의 기본 context path는 (/)임.
#Context path를 /boot로 해줄것임.
server.servlet.context-path=/boot

#DB 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/com
spring.datasource.username=com
spring.datasource.password=com01

#Spring JPA 설정 (기존 JDBC에서 API로) -> API에서 Hibernate(Spring JPA 구현체)로 
#Spring에서는 Mapper Interface -> SqlSessionFactoryBean이 구현해서 만들어줬고, sql문을 개발자가 직접 작성했음.
#Spring JPA에서는 Hibernate : SQL Quory 빌드를 자동 생성해줌.
#사용 예시
#Jpa클래스.save(vo) -> insert into Board(title, content, writer)
#					values (#{title}), #{context},#{writer})
#복잡한 쿼리는 직접 해야함.간단한 SQL문은 작성을 알아서 해주는 장점이 있음.
#JPA/Hibernate -> ORM (Object Relational Mapping - 객체 관계 맵핑

#JPA 설정
# MySQL 상세설정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.hibernate.ddl-auto=update

#JPA가 실행하고 실행 된 SQL문 보기
spring.jpa.show-sql=true
#실제 jpa 구현체인 hibernate가 동작하면서 발생하는 sql을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

#Spring Boot ViewResolver 설정
spring.mvc.view.prefix=/WEB-INF/board/
spring.mvc.view.suffix=.jsp






